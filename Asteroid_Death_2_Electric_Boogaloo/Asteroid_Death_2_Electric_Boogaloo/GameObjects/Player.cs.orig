using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Text;
using System.Threading.Tasks;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Audio;
using Microsoft.Xna.Framework.Graphics;
using Microsoft.Xna.Framework.Input;

namespace Asteroid_Death_2_Electric_Boogaloo
{
    public class Player : Ship
    {
        private KeyboardState lastKeyboardState;
<<<<<<< HEAD
        private SoundEffect pewEffect;
=======
>>>>>>> origin/Feature_MovementOfPlayer
        public Player(AsteroidsGame game) : base(game) { }
      
        public override void LoadContent()
        {
            pewEffect = Game.Content.Load<SoundEffect>("Blaster");
            LoadTexture("shipPlayer");
        }
        public GamePadDPad DPad { get; }
        public override void Update()
        {

            var gamePadState = GamePad.GetState(PlayerIndex.One);
            
            if ((gamePadState.Buttons.A == ButtonState.Pressed ||
            {
                pewEffect.Play();
                Shoot();
            }

            KeyboardState state = Keyboard.GetState();

            //GamePadState m_pad; // create GamePadState struct
            //m_pad = GamePad.GetState(PlayerIndex.One); // retrieve current controller state
            //if (m_pad.DPad.Up == ButtonState.Pressed) AccelerateForward(0.25f); // do something if DPad up button pressed|
            //if (m_pad.DPad.Left == ButtonState.Pressed) // do something if DPad left button pressed 



            if (gamePadState.ThumbSticks.Left.Y== 1.0f || (state.IsKeyDown(Keys.Up))) 
                AccelerateForward(0.25f);
           
            if (gamePadState.ThumbSticks.Left.Y == -1.0f || (state.IsKeyDown(Keys.Down)))
                AccelerateForward(-0.07f);

            if (gamePadState.ThumbSticks.Left.X == -1.0f ||(state.IsKeyDown(Keys.Left)))
                Rotation -= 0.04f;

            else if (gamePadState.ThumbSticks.Left.X == 1.0f || (state.IsKeyDown(Keys.Right)))
                Rotation += 0.04f;

            lastKeyboardState = state;

            Speed += new Vector2(-Speed.X * 0.015f, -Speed.Y * 0.015f);
            Move();
<<<<<<< HEAD

            StayInsideLevel();
=======
            
            StayInsideLevel(Game.Level);
        }

        public override bool CollidesWith(GameObject otherGameObject)
        {
            var collides = base.CollidesWith(otherGameObject);
            if (collides)
            {
                Game.ChangeGameState(GameState.gameover);
            }
            return collides;
        }
    }
}
